{"version":3,"sources":["../../../../../../src/client/components/react-dev-overlay/internal/helpers/use-error-handler.ts"],"sourcesContent":["import { useEffect } from 'react'\nimport { attachHydrationErrorState } from './attach-hydration-error-state'\nimport { isNextRouterError } from '../../../is-next-router-error'\nimport { storeHydrationErrorStateFromConsoleArgs } from './hydration-error-info'\nimport { formatConsoleArgs } from '../../../../lib/console'\nimport isError from '../../../../../lib/is-error'\nimport { createUnhandledError } from './console-error'\nimport { enqueueConsecutiveDedupedError } from './enqueue-client-error'\n\nexport type ErrorHandler = (error: Error) => void\n\nconst errorQueue: Array<Error> = []\nconst errorHandlers: Array<ErrorHandler> = []\nconst rejectionQueue: Array<Error> = []\nconst rejectionHandlers: Array<ErrorHandler> = []\n\nexport function handleClientError(\n  originError: unknown,\n  consoleErrorArgs: any[]\n) {\n  let error: Error\n  if (!originError || !isError(originError)) {\n    // If it's not an error, format the args into an error\n    const formattedErrorMessage = formatConsoleArgs(consoleErrorArgs)\n    error = createUnhandledError(formattedErrorMessage)\n  } else {\n    error = originError\n  }\n\n  storeHydrationErrorStateFromConsoleArgs(...consoleErrorArgs)\n  attachHydrationErrorState(error)\n\n  enqueueConsecutiveDedupedError(errorQueue, error)\n  for (const handler of errorHandlers) {\n    handler(error)\n  }\n}\n\nexport function useErrorHandler(\n  handleOnUnhandledError: ErrorHandler,\n  handleOnUnhandledRejection: ErrorHandler\n) {\n  useEffect(() => {\n    // Handle queued errors.\n    errorQueue.forEach(handleOnUnhandledError)\n    rejectionQueue.forEach(handleOnUnhandledRejection)\n\n    // Listen to new errors.\n    errorHandlers.push(handleOnUnhandledError)\n    rejectionHandlers.push(handleOnUnhandledRejection)\n\n    return () => {\n      // Remove listeners.\n      errorHandlers.splice(errorHandlers.indexOf(handleOnUnhandledError), 1)\n      rejectionHandlers.splice(\n        rejectionHandlers.indexOf(handleOnUnhandledRejection),\n        1\n      )\n    }\n  }, [handleOnUnhandledError, handleOnUnhandledRejection])\n}\n\nfunction onUnhandledError(event: WindowEventMap['error']): void | boolean {\n  if (isNextRouterError(event.error)) {\n    event.preventDefault()\n    return false\n  }\n  handleClientError(event.error, [])\n}\n\nfunction onUnhandledRejection(ev: WindowEventMap['unhandledrejection']): void {\n  const reason = ev?.reason\n  if (isNextRouterError(reason)) {\n    ev.preventDefault()\n    return\n  }\n\n  let error = reason\n  if (error && !isError(error)) {\n    error = createUnhandledError(error + '')\n  }\n\n  rejectionQueue.push(error)\n  for (const handler of rejectionHandlers) {\n    handler(error)\n  }\n}\n\nexport function handleGlobalErrors() {\n  if (typeof window !== 'undefined') {\n    try {\n      // Increase the number of stack frames on the client\n      Error.stackTraceLimit = 50\n    } catch {}\n\n    window.addEventListener('error', onUnhandledError)\n    window.addEventListener('unhandledrejection', onUnhandledRejection)\n  }\n}\n"],"names":["useEffect","attachHydrationErrorState","isNextRouterError","storeHydrationErrorStateFromConsoleArgs","formatConsoleArgs","isError","createUnhandledError","enqueueConsecutiveDedupedError","errorQueue","errorHandlers","rejectionQueue","rejectionHandlers","handleClientError","originError","consoleErrorArgs","error","formattedErrorMessage","handler","useErrorHandler","handleOnUnhandledError","handleOnUnhandledRejection","forEach","push","splice","indexOf","onUnhandledError","event","preventDefault","onUnhandledRejection","ev","reason","handleGlobalErrors","window","Error","stackTraceLimit","addEventListener"],"mappings":"AAAA,SAASA,SAAS,QAAQ,QAAO;AACjC,SAASC,yBAAyB,QAAQ,iCAAgC;AAC1E,SAASC,iBAAiB,QAAQ,gCAA+B;AACjE,SAASC,uCAAuC,QAAQ,yBAAwB;AAChF,SAASC,iBAAiB,QAAQ,0BAAyB;AAC3D,OAAOC,aAAa,8BAA6B;AACjD,SAASC,oBAAoB,QAAQ,kBAAiB;AACtD,SAASC,8BAA8B,QAAQ,yBAAwB;AAIvE,MAAMC,aAA2B,EAAE;AACnC,MAAMC,gBAAqC,EAAE;AAC7C,MAAMC,iBAA+B,EAAE;AACvC,MAAMC,oBAAyC,EAAE;AAEjD,OAAO,SAASC,kBACdC,WAAoB,EACpBC,gBAAuB;IAEvB,IAAIC;IACJ,IAAI,CAACF,eAAe,CAACR,QAAQQ,cAAc;QACzC,sDAAsD;QACtD,MAAMG,wBAAwBZ,kBAAkBU;QAChDC,QAAQT,qBAAqBU;IAC/B,OAAO;QACLD,QAAQF;IACV;IAEAV,2CAA2CW;IAC3Cb,0BAA0Bc;IAE1BR,+BAA+BC,YAAYO;IAC3C,KAAK,MAAME,WAAWR,cAAe;QACnCQ,QAAQF;IACV;AACF;AAEA,OAAO,SAASG,gBACdC,sBAAoC,EACpCC,0BAAwC;IAExCpB,UAAU;QACR,wBAAwB;QACxBQ,WAAWa,OAAO,CAACF;QACnBT,eAAeW,OAAO,CAACD;QAEvB,wBAAwB;QACxBX,cAAca,IAAI,CAACH;QACnBR,kBAAkBW,IAAI,CAACF;QAEvB,OAAO;YACL,oBAAoB;YACpBX,cAAcc,MAAM,CAACd,cAAce,OAAO,CAACL,yBAAyB;YACpER,kBAAkBY,MAAM,CACtBZ,kBAAkBa,OAAO,CAACJ,6BAC1B;QAEJ;IACF,GAAG;QAACD;QAAwBC;KAA2B;AACzD;AAEA,SAASK,iBAAiBC,KAA8B;IACtD,IAAIxB,kBAAkBwB,MAAMX,KAAK,GAAG;QAClCW,MAAMC,cAAc;QACpB,OAAO;IACT;IACAf,kBAAkBc,MAAMX,KAAK,EAAE,EAAE;AACnC;AAEA,SAASa,qBAAqBC,EAAwC;IACpE,MAAMC,SAASD,sBAAAA,GAAIC,MAAM;IACzB,IAAI5B,kBAAkB4B,SAAS;QAC7BD,GAAGF,cAAc;QACjB;IACF;IAEA,IAAIZ,QAAQe;IACZ,IAAIf,SAAS,CAACV,QAAQU,QAAQ;QAC5BA,QAAQT,qBAAqBS,QAAQ;IACvC;IAEAL,eAAeY,IAAI,CAACP;IACpB,KAAK,MAAME,WAAWN,kBAAmB;QACvCM,QAAQF;IACV;AACF;AAEA,OAAO,SAASgB;IACd,IAAI,OAAOC,WAAW,aAAa;QACjC,IAAI;YACF,oDAAoD;YACpDC,MAAMC,eAAe,GAAG;QAC1B,EAAE,UAAM,CAAC;QAETF,OAAOG,gBAAgB,CAAC,SAASV;QACjCO,OAAOG,gBAAgB,CAAC,sBAAsBP;IAChD;AACF"}