{"version":3,"sources":["../../src/server/image-optimizer.ts"],"sourcesContent":["import { createHash } from 'crypto'\nimport { promises } from 'fs'\nimport type { IncomingMessage, ServerResponse } from 'http'\nimport { mediaType } from 'next/dist/compiled/@hapi/accept'\nimport contentDisposition from 'next/dist/compiled/content-disposition'\nimport imageSizeOf from 'next/dist/compiled/image-size'\nimport isAnimated from 'next/dist/compiled/is-animated'\nimport { join } from 'path'\nimport nodeUrl, { type UrlWithParsedQuery } from 'url'\n\nimport { getImageBlurSvg } from '../shared/lib/image-blur-svg'\nimport type { ImageConfigComplete } from '../shared/lib/image-config'\nimport { hasLocalMatch } from '../shared/lib/match-local-pattern'\nimport { hasRemoteMatch } from '../shared/lib/match-remote-pattern'\nimport type { NextConfigComplete } from './config-shared'\nimport { createRequestResponseMocks } from './lib/mock-request'\nimport type { NextUrlWithParsedQuery } from './request-meta'\nimport {\n  CachedRouteKind,\n  type CachedImageValue,\n  type IncrementalCacheEntry,\n  type IncrementalCacheItem,\n  type IncrementalCacheValue,\n} from './response-cache'\nimport { sendEtagResponse } from './send-payload'\nimport { getContentType, getExtension } from './serve-static'\nimport * as Log from '../build/output/log'\nimport isError from '../lib/is-error'\nimport { parseUrl } from '../lib/url'\n\ntype XCacheHeader = 'MISS' | 'HIT' | 'STALE'\n\nconst AVIF = 'image/avif'\nconst WEBP = 'image/webp'\nconst PNG = 'image/png'\nconst JPEG = 'image/jpeg'\nconst GIF = 'image/gif'\nconst SVG = 'image/svg+xml'\nconst ICO = 'image/x-icon'\nconst TIFF = 'image/tiff'\nconst BMP = 'image/bmp'\nconst CACHE_VERSION = 4\nconst ANIMATABLE_TYPES = [WEBP, PNG, GIF]\nconst VECTOR_TYPES = [SVG]\nconst BLUR_IMG_SIZE = 8 // should match `next-image-loader`\nconst BLUR_QUALITY = 70 // should match `next-image-loader`\n\nlet _sharp: typeof import('sharp')\n\nfunction getSharp(concurrency: number | null | undefined) {\n  if (_sharp) {\n    return _sharp\n  }\n  try {\n    _sharp = require('sharp')\n    if (_sharp && _sharp.concurrency() > 1) {\n      // Reducing concurrency should reduce the memory usage too.\n      // We more aggressively reduce in dev but also reduce in prod.\n      // https://sharp.pixelplumbing.com/api-utility#concurrency\n      const divisor = process.env.NODE_ENV === 'development' ? 4 : 2\n      _sharp.concurrency(\n        concurrency ?? Math.floor(Math.max(_sharp.concurrency() / divisor, 1))\n      )\n    }\n  } catch (e: unknown) {\n    if (isError(e) && e.code === 'MODULE_NOT_FOUND') {\n      throw new Error(\n        'Module `sharp` not found. Please run `npm install --cpu=wasm32 sharp` to install it.'\n      )\n    }\n    throw e\n  }\n  return _sharp\n}\n\nexport interface ImageParamsResult {\n  href: string\n  isAbsolute: boolean\n  isStatic: boolean\n  width: number\n  quality: number\n  mimeType: string\n  sizes: number[]\n  minimumCacheTTL: number\n}\n\ninterface ImageUpstream {\n  buffer: Buffer\n  contentType: string | null | undefined\n  cacheControl: string | null | undefined\n  etag: string\n}\n\nfunction getSupportedMimeType(options: string[], accept = ''): string {\n  const mimeType = mediaType(accept, options)\n  return accept.includes(mimeType) ? mimeType : ''\n}\n\nexport function getHash(items: (string | number | Buffer)[]) {\n  const hash = createHash('sha256')\n  for (let item of items) {\n    if (typeof item === 'number') hash.update(String(item))\n    else {\n      hash.update(item)\n    }\n  }\n  // See https://en.wikipedia.org/wiki/Base64#URL_applications\n  return hash.digest('base64url')\n}\n\nexport function extractEtag(\n  etag: string | null | undefined,\n  imageBuffer: Buffer\n) {\n  if (etag) {\n    // upstream etag needs to be base64url encoded due to weak etag signature\n    // as we store this in the cache-entry file name.\n    return Buffer.from(etag).toString('base64url')\n  }\n  return getImageEtag(imageBuffer)\n}\n\nexport function getImageEtag(image: Buffer) {\n  return getHash([image])\n}\n\nasync function writeToCacheDir(\n  dir: string,\n  extension: string,\n  maxAge: number,\n  expireAt: number,\n  buffer: Buffer,\n  etag: string,\n  upstreamEtag: string\n) {\n  const filename = join(\n    dir,\n    `${maxAge}.${expireAt}.${etag}.${upstreamEtag}.${extension}`\n  )\n\n  await promises.rm(dir, { recursive: true, force: true }).catch(() => {})\n\n  await promises.mkdir(dir, { recursive: true })\n  await promises.writeFile(filename, buffer)\n}\n\n/**\n * Inspects the first few bytes of a buffer to determine if\n * it matches the \"magic number\" of known file signatures.\n * https://en.wikipedia.org/wiki/List_of_file_signatures\n */\nexport function detectContentType(buffer: Buffer) {\n  if ([0xff, 0xd8, 0xff].every((b, i) => buffer[i] === b)) {\n    return JPEG\n  }\n  if (\n    [0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a].every(\n      (b, i) => buffer[i] === b\n    )\n  ) {\n    return PNG\n  }\n  if ([0x47, 0x49, 0x46, 0x38].every((b, i) => buffer[i] === b)) {\n    return GIF\n  }\n  if (\n    [0x52, 0x49, 0x46, 0x46, 0, 0, 0, 0, 0x57, 0x45, 0x42, 0x50].every(\n      (b, i) => !b || buffer[i] === b\n    )\n  ) {\n    return WEBP\n  }\n  if ([0x3c, 0x3f, 0x78, 0x6d, 0x6c].every((b, i) => buffer[i] === b)) {\n    return SVG\n  }\n  if ([0x3c, 0x73, 0x76, 0x67].every((b, i) => buffer[i] === b)) {\n    return SVG\n  }\n  if (\n    [0, 0, 0, 0, 0x66, 0x74, 0x79, 0x70, 0x61, 0x76, 0x69, 0x66].every(\n      (b, i) => !b || buffer[i] === b\n    )\n  ) {\n    return AVIF\n  }\n  if ([0x00, 0x00, 0x01, 0x00].every((b, i) => buffer[i] === b)) {\n    return ICO\n  }\n  if ([0x49, 0x49, 0x2a, 0x00].every((b, i) => buffer[i] === b)) {\n    return TIFF\n  }\n  if ([0x42, 0x4d].every((b, i) => buffer[i] === b)) {\n    return BMP\n  }\n  return null\n}\n\nexport class ImageOptimizerCache {\n  private cacheDir: string\n  private nextConfig: NextConfigComplete\n\n  static validateParams(\n    req: IncomingMessage,\n    query: UrlWithParsedQuery['query'],\n    nextConfig: NextConfigComplete,\n    isDev: boolean\n  ): ImageParamsResult | { errorMessage: string } {\n    const imageData = nextConfig.images\n    const {\n      deviceSizes = [],\n      imageSizes = [],\n      domains = [],\n      minimumCacheTTL = 60,\n      formats = ['image/webp'],\n    } = imageData\n    const remotePatterns = nextConfig.images?.remotePatterns || []\n    const localPatterns = nextConfig.images?.localPatterns\n    const { url, w, q } = query\n    let href: string\n\n    if (domains.length > 0) {\n      Log.warnOnce(\n        'The \"images.domains\" configuration is deprecated. Please use \"images.remotePatterns\" configuration instead.'\n      )\n    }\n\n    if (!url) {\n      return { errorMessage: '\"url\" parameter is required' }\n    } else if (Array.isArray(url)) {\n      return { errorMessage: '\"url\" parameter cannot be an array' }\n    }\n\n    if (url.length > 3072) {\n      return { errorMessage: '\"url\" parameter is too long' }\n    }\n\n    if (url.startsWith('//')) {\n      return {\n        errorMessage: '\"url\" parameter cannot be a protocol-relative URL (//)',\n      }\n    }\n\n    let isAbsolute: boolean\n\n    if (url.startsWith('/')) {\n      href = url\n      isAbsolute = false\n      if (\n        /\\/_next\\/image($|\\/)/.test(\n          decodeURIComponent(parseUrl(url)?.pathname ?? '')\n        )\n      ) {\n        return {\n          errorMessage: '\"url\" parameter cannot be recursive',\n        }\n      }\n      if (!hasLocalMatch(localPatterns, url)) {\n        return { errorMessage: '\"url\" parameter is not allowed' }\n      }\n    } else {\n      let hrefParsed: URL\n\n      try {\n        hrefParsed = new URL(url)\n        href = hrefParsed.toString()\n        isAbsolute = true\n      } catch (_error) {\n        return { errorMessage: '\"url\" parameter is invalid' }\n      }\n\n      if (!['http:', 'https:'].includes(hrefParsed.protocol)) {\n        return { errorMessage: '\"url\" parameter is invalid' }\n      }\n\n      if (!hasRemoteMatch(domains, remotePatterns, hrefParsed)) {\n        return { errorMessage: '\"url\" parameter is not allowed' }\n      }\n    }\n\n    if (!w) {\n      return { errorMessage: '\"w\" parameter (width) is required' }\n    } else if (Array.isArray(w)) {\n      return { errorMessage: '\"w\" parameter (width) cannot be an array' }\n    } else if (!/^[0-9]+$/.test(w)) {\n      return {\n        errorMessage: '\"w\" parameter (width) must be an integer greater than 0',\n      }\n    }\n\n    if (!q) {\n      return { errorMessage: '\"q\" parameter (quality) is required' }\n    } else if (Array.isArray(q)) {\n      return { errorMessage: '\"q\" parameter (quality) cannot be an array' }\n    } else if (!/^[0-9]+$/.test(q)) {\n      return {\n        errorMessage:\n          '\"q\" parameter (quality) must be an integer between 1 and 100',\n      }\n    }\n\n    const width = parseInt(w, 10)\n\n    if (width <= 0 || isNaN(width)) {\n      return {\n        errorMessage: '\"w\" parameter (width) must be an integer greater than 0',\n      }\n    }\n\n    const sizes = [...(deviceSizes || []), ...(imageSizes || [])]\n\n    if (isDev) {\n      sizes.push(BLUR_IMG_SIZE)\n    }\n\n    const isValidSize =\n      sizes.includes(width) || (isDev && width <= BLUR_IMG_SIZE)\n\n    if (!isValidSize) {\n      return {\n        errorMessage: `\"w\" parameter (width) of ${width} is not allowed`,\n      }\n    }\n\n    const quality = parseInt(q, 10)\n\n    if (isNaN(quality) || quality < 1 || quality > 100) {\n      return {\n        errorMessage:\n          '\"q\" parameter (quality) must be an integer between 1 and 100',\n      }\n    }\n\n    const mimeType = getSupportedMimeType(formats || [], req.headers['accept'])\n\n    const isStatic = url.startsWith(\n      `${nextConfig.basePath || ''}/_next/static/media`\n    )\n\n    return {\n      href,\n      sizes,\n      isAbsolute,\n      isStatic,\n      width,\n      quality,\n      mimeType,\n      minimumCacheTTL,\n    }\n  }\n\n  static getCacheKey({\n    href,\n    width,\n    quality,\n    mimeType,\n  }: {\n    href: string\n    width: number\n    quality: number\n    mimeType: string\n  }): string {\n    return getHash([CACHE_VERSION, href, width, quality, mimeType])\n  }\n\n  constructor({\n    distDir,\n    nextConfig,\n  }: {\n    distDir: string\n    nextConfig: NextConfigComplete\n  }) {\n    this.cacheDir = join(distDir, 'cache', 'images')\n    this.nextConfig = nextConfig\n  }\n\n  async get(cacheKey: string): Promise<IncrementalCacheEntry | null> {\n    try {\n      const cacheDir = join(this.cacheDir, cacheKey)\n      const files = await promises.readdir(cacheDir)\n      const now = Date.now()\n\n      for (const file of files) {\n        const [maxAgeSt, expireAtSt, etag, upstreamEtag, extension] =\n          file.split('.', 5)\n        const buffer = await promises.readFile(join(cacheDir, file))\n        const expireAt = Number(expireAtSt)\n        const maxAge = Number(maxAgeSt)\n\n        return {\n          value: {\n            kind: CachedRouteKind.IMAGE,\n            etag,\n            buffer,\n            extension,\n            upstreamEtag,\n          },\n          revalidateAfter:\n            Math.max(maxAge, this.nextConfig.images.minimumCacheTTL) * 1000 +\n            Date.now(),\n          curRevalidate: maxAge,\n          isStale: now > expireAt,\n          isFallback: false,\n        }\n      }\n    } catch (_) {\n      // failed to read from cache dir, treat as cache miss\n    }\n    return null\n  }\n  async set(\n    cacheKey: string,\n    value: IncrementalCacheValue | null,\n    {\n      revalidate,\n    }: {\n      revalidate?: number | false\n    }\n  ) {\n    if (value?.kind !== CachedRouteKind.IMAGE) {\n      throw new Error('invariant attempted to set non-image to image-cache')\n    }\n\n    if (typeof revalidate !== 'number') {\n      throw new Error('invariant revalidate must be a number for image-cache')\n    }\n    const expireAt =\n      Math.max(revalidate, this.nextConfig.images.minimumCacheTTL) * 1000 +\n      Date.now()\n\n    try {\n      await writeToCacheDir(\n        join(this.cacheDir, cacheKey),\n        value.extension,\n        revalidate,\n        expireAt,\n        value.buffer,\n        value.etag,\n        value.upstreamEtag\n      )\n    } catch (err) {\n      Log.error(`Failed to write image to cache ${cacheKey}`, err)\n    }\n  }\n}\nexport class ImageError extends Error {\n  statusCode: number\n\n  constructor(statusCode: number, message: string) {\n    super(message)\n\n    // ensure an error status is used > 400\n    if (statusCode >= 400) {\n      this.statusCode = statusCode\n    } else {\n      this.statusCode = 500\n    }\n  }\n}\n\nfunction parseCacheControl(\n  str: string | null | undefined\n): Map<string, string> {\n  const map = new Map<string, string>()\n  if (!str) {\n    return map\n  }\n  for (let directive of str.split(',')) {\n    let [key, value] = directive.trim().split('=', 2)\n    key = key.toLowerCase()\n    if (value) {\n      value = value.toLowerCase()\n    }\n    map.set(key, value)\n  }\n  return map\n}\n\nexport function getMaxAge(str: string | null | undefined): number {\n  const map = parseCacheControl(str)\n  if (map) {\n    let age = map.get('s-maxage') || map.get('max-age') || ''\n    if (age.startsWith('\"') && age.endsWith('\"')) {\n      age = age.slice(1, -1)\n    }\n    const n = parseInt(age, 10)\n    if (!isNaN(n)) {\n      return n\n    }\n  }\n  return 0\n}\nexport function getPreviouslyCachedImageOrNull(\n  upstreamImage: ImageUpstream,\n  previousCacheEntry: IncrementalCacheItem | undefined\n): CachedImageValue | null {\n  if (\n    previousCacheEntry?.value?.kind === 'IMAGE' &&\n    // Images that are SVGs, animated or failed the optimization previously end up using upstreamEtag as their etag as well,\n    // in these cases we want to trigger a new \"optimization\" attempt.\n    previousCacheEntry.value.upstreamEtag !== previousCacheEntry.value.etag &&\n    // and the upstream etag is the same as the previous cache entry's\n    upstreamImage.etag === previousCacheEntry.value.upstreamEtag\n  ) {\n    return previousCacheEntry.value\n  }\n  return null\n}\n\nexport async function optimizeImage({\n  buffer,\n  contentType,\n  quality,\n  width,\n  height,\n  concurrency,\n  limitInputPixels,\n  timeoutInSeconds,\n}: {\n  buffer: Buffer\n  contentType: string\n  quality: number\n  width: number\n  height?: number\n  concurrency?: number | null\n  limitInputPixels?: number\n  timeoutInSeconds?: number\n}): Promise<Buffer> {\n  const sharp = getSharp(concurrency)\n  const transformer = sharp(buffer, {\n    limitInputPixels,\n  })\n    .timeout({\n      seconds: timeoutInSeconds ?? 7,\n    })\n    .rotate()\n\n  if (height) {\n    transformer.resize(width, height)\n  } else {\n    transformer.resize(width, undefined, {\n      withoutEnlargement: true,\n    })\n  }\n\n  if (contentType === AVIF) {\n    const avifQuality = quality - 20\n    transformer.avif({\n      quality: Math.max(avifQuality, 1),\n    })\n  } else if (contentType === WEBP) {\n    transformer.webp({ quality })\n  } else if (contentType === PNG) {\n    transformer.png({ quality })\n  } else if (contentType === JPEG) {\n    transformer.jpeg({ quality, mozjpeg: true })\n  }\n\n  const optimizedBuffer = await transformer.toBuffer()\n\n  return optimizedBuffer\n}\n\nexport async function fetchExternalImage(href: string): Promise<ImageUpstream> {\n  const res = await fetch(href, {\n    signal: AbortSignal.timeout(7_000),\n  }).catch((err) => err as Error)\n\n  if (res instanceof Error) {\n    const err = res as Error\n    if (err.name === 'TimeoutError') {\n      Log.error('upstream image response timed out for', href)\n      throw new ImageError(\n        504,\n        '\"url\" parameter is valid but upstream response timed out'\n      )\n    }\n    throw err\n  }\n\n  if (!res.ok) {\n    Log.error('upstream image response failed for', href, res.status)\n    throw new ImageError(\n      res.status,\n      '\"url\" parameter is valid but upstream response is invalid'\n    )\n  }\n\n  const buffer = Buffer.from(await res.arrayBuffer())\n  const contentType = res.headers.get('Content-Type')\n  const cacheControl = res.headers.get('Cache-Control')\n  const etag = extractEtag(res.headers.get('ETag'), buffer)\n  return { buffer, contentType, cacheControl, etag }\n}\n\nexport async function fetchInternalImage(\n  href: string,\n  _req: IncomingMessage,\n  _res: ServerResponse,\n  handleRequest: (\n    newReq: IncomingMessage,\n    newRes: ServerResponse,\n    newParsedUrl?: NextUrlWithParsedQuery\n  ) => Promise<void>\n): Promise<ImageUpstream> {\n  try {\n    const mocked = createRequestResponseMocks({\n      url: href,\n      method: _req.method || 'GET',\n      headers: _req.headers,\n      socket: _req.socket,\n    })\n\n    await handleRequest(mocked.req, mocked.res, nodeUrl.parse(href, true))\n    await mocked.res.hasStreamed\n\n    if (!mocked.res.statusCode) {\n      Log.error('image response failed for', href, mocked.res.statusCode)\n      throw new ImageError(\n        mocked.res.statusCode,\n        '\"url\" parameter is valid but internal response is invalid'\n      )\n    }\n\n    const buffer = Buffer.concat(mocked.res.buffers)\n    const contentType = mocked.res.getHeader('Content-Type')\n    const cacheControl = mocked.res.getHeader('Cache-Control')\n    const etag = extractEtag(mocked.res.getHeader('ETag'), buffer)\n\n    return { buffer, contentType, cacheControl, etag }\n  } catch (err) {\n    Log.error('upstream image response failed for', href, err)\n    throw new ImageError(\n      500,\n      '\"url\" parameter is valid but upstream response is invalid'\n    )\n  }\n}\n\nexport async function imageOptimizer(\n  imageUpstream: ImageUpstream,\n  paramsResult: Pick<\n    ImageParamsResult,\n    'href' | 'width' | 'quality' | 'mimeType'\n  >,\n  nextConfig: {\n    experimental: Pick<\n      NextConfigComplete['experimental'],\n      'imgOptConcurrency' | 'imgOptMaxInputPixels' | 'imgOptTimeoutInSeconds'\n    >\n    images: Pick<\n      NextConfigComplete['images'],\n      'dangerouslyAllowSVG' | 'minimumCacheTTL'\n    >\n  },\n  isDev: boolean | undefined,\n  previousCacheEntry?: IncrementalCacheItem\n): Promise<{\n  buffer: Buffer\n  contentType: string\n  maxAge: number\n  etag: string\n  upstreamEtag: string\n}> {\n  const { href, quality, width, mimeType } = paramsResult\n  const { buffer: upstreamBuffer, etag: upstreamEtag } = imageUpstream\n  const maxAge = getMaxAge(imageUpstream.cacheControl)\n\n  const upstreamType =\n    detectContentType(upstreamBuffer) ||\n    imageUpstream.contentType?.toLowerCase().trim()\n\n  if (upstreamType) {\n    if (\n      upstreamType.startsWith('image/svg') &&\n      !nextConfig.images.dangerouslyAllowSVG\n    ) {\n      Log.error(\n        `The requested resource \"${href}\" has type \"${upstreamType}\" but dangerouslyAllowSVG is disabled`\n      )\n      throw new ImageError(\n        400,\n        '\"url\" parameter is valid but image type is not allowed'\n      )\n    }\n    if (ANIMATABLE_TYPES.includes(upstreamType) && isAnimated(upstreamBuffer)) {\n      Log.warnOnce(\n        `The requested resource \"${href}\" is an animated image so it will not be optimized. Consider adding the \"unoptimized\" property to the <Image>.`\n      )\n      return {\n        buffer: upstreamBuffer,\n        contentType: upstreamType,\n        maxAge,\n        etag: upstreamEtag,\n        upstreamEtag,\n      }\n    }\n    if (VECTOR_TYPES.includes(upstreamType)) {\n      // We don't warn here because we already know that \"dangerouslyAllowSVG\"\n      // was enabled above, therefore the user explicitly opted in.\n      // If we add more VECTOR_TYPES besides SVG, perhaps we could warn for those.\n      return {\n        buffer: upstreamBuffer,\n        contentType: upstreamType,\n        maxAge,\n        etag: upstreamEtag,\n        upstreamEtag,\n      }\n    }\n    if (!upstreamType.startsWith('image/') || upstreamType.includes(',')) {\n      Log.error(\n        \"The requested resource isn't a valid image for\",\n        href,\n        'received',\n        upstreamType\n      )\n      throw new ImageError(400, \"The requested resource isn't a valid image.\")\n    }\n  }\n\n  let contentType: string\n\n  if (mimeType) {\n    contentType = mimeType\n  } else if (\n    upstreamType?.startsWith('image/') &&\n    getExtension(upstreamType) &&\n    upstreamType !== WEBP &&\n    upstreamType !== AVIF\n  ) {\n    contentType = upstreamType\n  } else {\n    contentType = JPEG\n  }\n  const previouslyCachedImage = getPreviouslyCachedImageOrNull(\n    imageUpstream,\n    previousCacheEntry\n  )\n  if (previouslyCachedImage) {\n    return {\n      buffer: previouslyCachedImage.buffer,\n      contentType,\n      maxAge: previousCacheEntry?.curRevalidate || maxAge,\n      etag: previouslyCachedImage.etag,\n      upstreamEtag: previouslyCachedImage.upstreamEtag,\n    }\n  }\n\n  try {\n    let optimizedBuffer = await optimizeImage({\n      buffer: upstreamBuffer,\n      contentType,\n      quality,\n      width,\n      concurrency: nextConfig.experimental.imgOptConcurrency,\n      limitInputPixels: nextConfig.experimental.imgOptMaxInputPixels,\n      timeoutInSeconds: nextConfig.experimental.imgOptTimeoutInSeconds,\n    })\n    if (optimizedBuffer) {\n      if (isDev && width <= BLUR_IMG_SIZE && quality === BLUR_QUALITY) {\n        // During `next dev`, we don't want to generate blur placeholders with webpack\n        // because it can delay starting the dev server. Instead, `next-image-loader.js`\n        // will inline a special url to lazily generate the blur placeholder at request time.\n        const meta = await getImageSize(optimizedBuffer)\n        const opts = {\n          blurWidth: meta.width,\n          blurHeight: meta.height,\n          blurDataURL: `data:${contentType};base64,${optimizedBuffer.toString(\n            'base64'\n          )}`,\n        }\n        optimizedBuffer = Buffer.from(unescape(getImageBlurSvg(opts)))\n        contentType = 'image/svg+xml'\n      }\n      return {\n        buffer: optimizedBuffer,\n        contentType,\n        maxAge: Math.max(maxAge, nextConfig.images.minimumCacheTTL),\n        etag: getImageEtag(optimizedBuffer),\n        upstreamEtag,\n      }\n    } else {\n      throw new ImageError(500, 'Unable to optimize buffer')\n    }\n  } catch (error) {\n    if (upstreamBuffer && upstreamType) {\n      // If we fail to optimize, fallback to the original image\n      return {\n        buffer: upstreamBuffer,\n        contentType: upstreamType,\n        maxAge: nextConfig.images.minimumCacheTTL,\n        etag: upstreamEtag,\n        upstreamEtag,\n      }\n    } else {\n      throw new ImageError(\n        400,\n        'Unable to optimize image and unable to fallback to upstream image'\n      )\n    }\n  }\n}\n\nfunction getFileNameWithExtension(\n  url: string,\n  contentType: string | null\n): string {\n  const [urlWithoutQueryParams] = url.split('?', 1)\n  const fileNameWithExtension = urlWithoutQueryParams.split('/').pop()\n  if (!contentType || !fileNameWithExtension) {\n    return 'image.bin'\n  }\n\n  const [fileName] = fileNameWithExtension.split('.', 1)\n  const extension = getExtension(contentType)\n  return `${fileName}.${extension}`\n}\n\nfunction setResponseHeaders(\n  req: IncomingMessage,\n  res: ServerResponse,\n  url: string,\n  etag: string,\n  contentType: string | null,\n  isStatic: boolean,\n  xCache: XCacheHeader,\n  imagesConfig: ImageConfigComplete,\n  maxAge: number,\n  isDev: boolean\n) {\n  res.setHeader('Vary', 'Accept')\n  res.setHeader(\n    'Cache-Control',\n    isStatic\n      ? 'public, max-age=315360000, immutable'\n      : `public, max-age=${isDev ? 0 : maxAge}, must-revalidate`\n  )\n  if (sendEtagResponse(req, res, etag)) {\n    // already called res.end() so we're finished\n    return { finished: true }\n  }\n  if (contentType) {\n    res.setHeader('Content-Type', contentType)\n  }\n\n  const fileName = getFileNameWithExtension(url, contentType)\n  res.setHeader(\n    'Content-Disposition',\n    contentDisposition(fileName, { type: imagesConfig.contentDispositionType })\n  )\n\n  res.setHeader('Content-Security-Policy', imagesConfig.contentSecurityPolicy)\n  res.setHeader('X-Nextjs-Cache', xCache)\n\n  return { finished: false }\n}\n\nexport function sendResponse(\n  req: IncomingMessage,\n  res: ServerResponse,\n  url: string,\n  extension: string,\n  buffer: Buffer,\n  etag: string,\n  isStatic: boolean,\n  xCache: XCacheHeader,\n  imagesConfig: ImageConfigComplete,\n  maxAge: number,\n  isDev: boolean\n) {\n  const contentType = getContentType(extension)\n  const result = setResponseHeaders(\n    req,\n    res,\n    url,\n    etag,\n    contentType,\n    isStatic,\n    xCache,\n    imagesConfig,\n    maxAge,\n    isDev\n  )\n  if (!result.finished) {\n    res.setHeader('Content-Length', Buffer.byteLength(buffer))\n    res.end(buffer)\n  }\n}\n\nexport async function getImageSize(buffer: Buffer): Promise<{\n  width?: number\n  height?: number\n}> {\n  const { width, height } = imageSizeOf(buffer)\n  return { width, height }\n}\n"],"names":["ImageError","ImageOptimizerCache","detectContentType","extractEtag","fetchExternalImage","fetchInternalImage","getHash","getImageEtag","getImageSize","getMaxAge","getPreviouslyCachedImageOrNull","imageOptimizer","optimizeImage","sendResponse","AVIF","WEBP","PNG","JPEG","GIF","SVG","ICO","TIFF","BMP","CACHE_VERSION","ANIMATABLE_TYPES","VECTOR_TYPES","BLUR_IMG_SIZE","BLUR_QUALITY","_sharp","getSharp","concurrency","require","divisor","process","env","NODE_ENV","Math","floor","max","e","isError","code","Error","getSupportedMimeType","options","accept","mimeType","mediaType","includes","items","hash","createHash","item","update","String","digest","etag","imageBuffer","Buffer","from","toString","image","writeToCacheDir","dir","extension","maxAge","expireAt","buffer","upstreamEtag","filename","join","promises","rm","recursive","force","catch","mkdir","writeFile","every","b","i","validateParams","req","query","nextConfig","isDev","imageData","images","deviceSizes","imageSizes","domains","minimumCacheTTL","formats","remotePatterns","localPatterns","url","w","q","href","length","Log","warnOnce","errorMessage","Array","isArray","startsWith","isAbsolute","parseUrl","test","decodeURIComponent","pathname","hasLocalMatch","hrefParsed","URL","_error","protocol","hasRemoteMatch","width","parseInt","isNaN","sizes","push","isValidSize","quality","headers","isStatic","basePath","getCacheKey","constructor","distDir","cacheDir","get","cacheKey","files","readdir","now","Date","file","maxAgeSt","expireAtSt","split","readFile","Number","value","kind","CachedRouteKind","IMAGE","revalidateAfter","curRevalidate","isStale","isFallback","_","set","revalidate","err","error","statusCode","message","parseCacheControl","str","map","Map","directive","key","trim","toLowerCase","age","endsWith","slice","n","upstreamImage","previousCacheEntry","contentType","height","limitInputPixels","timeoutInSeconds","sharp","transformer","timeout","seconds","rotate","resize","undefined","withoutEnlargement","avifQuality","avif","webp","png","jpeg","mozjpeg","optimizedBuffer","toBuffer","res","fetch","signal","AbortSignal","name","ok","status","arrayBuffer","cacheControl","_req","_res","handleRequest","mocked","createRequestResponseMocks","method","socket","nodeUrl","parse","hasStreamed","concat","buffers","getHeader","imageUpstream","paramsResult","upstreamBuffer","upstreamType","dangerouslyAllowSVG","isAnimated","getExtension","previouslyCachedImage","experimental","imgOptConcurrency","imgOptMaxInputPixels","imgOptTimeoutInSeconds","meta","opts","blurWidth","blurHeight","blurDataURL","unescape","getImageBlurSvg","getFileNameWithExtension","urlWithoutQueryParams","fileNameWithExtension","pop","fileName","setResponseHeaders","xCache","imagesConfig","setHeader","sendEtagResponse","finished","contentDisposition","type","contentDispositionType","contentSecurityPolicy","getContentType","result","byteLength","end","imageSizeOf"],"mappings":"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"}